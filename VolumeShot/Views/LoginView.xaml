<UserControl x:Class="VolumeShot.Views.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VolumeShot.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="Grid" x:Key="styleLogin">
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=LoginViewModel.Login.IsRegisteration}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Grid" x:Key="styleRegistration">
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=LoginViewModel.Login.IsRegisteration}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="styleButtonLogin" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Padding" Value="0 10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=LoginViewModel.Login.IsLoading}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="2 10"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="2 10"/>
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 10"/>
        </Style>
        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Padding" Value="0 10"/>
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="0 10"/>
        </Style>
    </UserControl.Resources>
    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
        <StackPanel>
            <DockPanel HorizontalAlignment="Center">
                <RadioButton Content="Registration" IsChecked="{Binding Path=LoginViewModel.Login.IsRegisteration}"/>
                <RadioButton Content="Login" IsChecked="True"/>
            </DockPanel>
            <Grid>
                <Grid Style="{StaticResource styleRegistration}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="ApiKey:"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="SecretKey:"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=LoginViewModel.Login.Name}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=LoginViewModel.Login.ApiKey}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Path=LoginViewModel.Login.SecretKey}"/>
                        <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Content="Testnet" IsChecked="{Binding Path=LoginViewModel.Login.IsTestnet}"/>
                        <Button Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Content="Registration" Command="{Binding Path=LoginViewModel.RegistrationCommand}"/>
                    </Grid>
                </Grid>
                <Grid Style="{StaticResource styleLogin}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ComboBox ItemsSource="{Binding Path=LoginViewModel.Login.Users}" SelectedItem="{Binding Path=LoginViewModel.Login.SelectedUser}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button Grid.Row="1" Content="Login" Command="{Binding Path=LoginViewModel.AuthorizeCommand}" Style="{StaticResource styleButtonLogin}"/>
                    </Grid>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
